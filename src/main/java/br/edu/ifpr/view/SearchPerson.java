/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifpr.view;

import br.edu.ifpr.model.Person;
import br.edu.ifpr.view.tablemodel.PersonTableModel;
import br.edu.ifpr.view.tablemodel.SearchComboBoxModel;
import br.edu.ifpr.view.tablemodel.SearchPersonTableModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author rafae
 */
public class SearchPerson extends javax.swing.JFrame {

    private SearchPersonTableModel searchPersonTableModel = new SearchPersonTableModel();
    private PersonTableModel sourceModel;

    /**
     * Creates new form SearchPerson
     */
    public SearchPerson() {
        initComponents();
        setTitle("Pesquisar Cadastro");
        tbFilteredPerson.setModel(searchPersonTableModel);
        cbField.setModel(new SearchComboBoxModel());
    }

    public SearchPerson(PersonTableModel sourceModel) {
        initComponents();
        setTitle("Pesquisar Cadastro");
        tbFilteredPerson.setModel(searchPersonTableModel);
        cbField.setModel(new SearchComboBoxModel());
        this.sourceModel = sourceModel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        lbSearch = new javax.swing.JLabel();
        ftSearch = new javax.swing.JTextField();
        cbField = new javax.swing.JComboBox<>();
        lbField = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFilteredPerson = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbSearch.setText("Pesquisar:");

        ftSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftSearchActionPerformed(evt);
            }
        });

        cbField.setToolTipText("");
        cbField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFieldActionPerformed(evt);
            }
        });

        lbField.setText("Campo:");

        btnSearch.setText("Pesquisar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tbFilteredPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbFilteredPerson);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbField, 0, 103, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSearch)
                    .addComponent(ftSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbField)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ftSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftSearchActionPerformed

    private void cbFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFieldActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String searchValue = ftSearch.getText().trim();
        String selectedField = (String) cbField.getSelectedItem();

        if (sourceModel == null) {
            JOptionPane.showMessageDialog(this, "Não há dados para pesquisar!");
        }
        List<Person> allPersons = getAllPersonFromSourceModel();

        List<Person> filteredPersons = filterPersons(allPersons, selectedField, searchValue);

        searchPersonTableModel.setData(filteredPersons);
        searchPersonTableModel.fireTableDataChanged();

    }//GEN-LAST:event_btnSearchActionPerformed

    private List<Person> getAllPersonFromSourceModel() {
        List<Person> persons = new ArrayList<>();
        int row = sourceModel.getRowCount();
        for (int i = 0; i < row; i++) {
            persons.add(sourceModel.get(i));
        }
        return persons;
    }

    private List<Person> filterPersons(List<Person> allPersons, String selectedField, String searchValue) {
        List<Person> filteredPersons = new ArrayList<>();

        if (searchValue.isEmpty()) {
            return allPersons;
        }

        String fieldName = SearchComboBoxModel.getFieldName(selectedField);

        for (Person person : allPersons) {

            switch (fieldName) {
                case "name":
                    if (person.getName().toLowerCase().contains(searchValue.toLowerCase())) {
                        filteredPersons.add(person);
                    }
                    break;
                case "age":
                    try {
                        int searchAge = Integer.parseInt(searchValue);
                        if (person.getAge() == searchAge) {
                            filteredPersons.add(person);
                        }
                    } catch (NumberFormatException e) {

                    }
                    break;
                case "cpf":
                    if (person.getCpf().contains(searchValue)) {
                        filteredPersons.add(person);
                    }
                    break;
                case "address":
                    if (person.getAddress().toLowerCase().contains(searchValue.toLowerCase())) {
                        filteredPersons.add(person);
                    }
                    break;
            }
        }
        return filteredPersons;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchPerson().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbField;
    private javax.swing.JTextField ftSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbField;
    private javax.swing.JLabel lbSearch;
    private javax.swing.JTable tbFilteredPerson;
    // End of variables declaration//GEN-END:variables
}
